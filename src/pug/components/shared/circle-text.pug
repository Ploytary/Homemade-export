mixin circleText(radius, fontSize, textContent, options = {})
  -
    const { gap = ' ', repeat = 1 } = options;
    const textArcPathRadius = radius - fontSize;
    const arcAngleInDegrees = 359;
    const id = `circle-text-${Math.floor(Math.random() * 9999)}`;

    const centerX = 0;
    const centerY = 0;
    const startX = textArcPathRadius;
    const startY = centerY;
    const arcEndX = centerX + textArcPathRadius * Math.cos(arcAngleInDegrees * Math.PI / 180);
    const arcEndY = centerY + textArcPathRadius * Math.sin(arcAngleInDegrees * Math.PI / 180);
    const arcLength = 2 * Math.PI * textArcPathRadius * (arcAngleInDegrees / 360);
    const resultText = new Array(repeat).fill(null).map(() => textContent).join(gap) + '&nbsp;';

  svg.text-circle&attributes(attributes)(
    viewBox = `${-1 * radius} ${-1 * radius} ${2 * radius} ${2 * radius}`,
    width = `100%` height = `100%`
  )
    defs 
      path(
        id = id,
        d = `M ${startX},${startY} A ${textArcPathRadius},${textArcPathRadius} 45 1,1 ${arcEndX},${arcEndY}`, fill = 'none', stroke = 'red', stroke-width = 2)
    text.text-circle__content
      textPath(xlink:href = `#${id}`, textLength = arcLength, word-spacing = '0.3em', font-size = fontSize, style = {'line-height': '1px'})!= resultText